{"mappings":"sOACO,SAASA,EAAmBC,GAC/B,MAAMC,EACL,2EAGH,OAAOD,EAAIE,KAAI,EAACC,aAAEA,EAAYC,cAAEA,EAAaC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KAC3E,iCAAiCL,GAAiBH,gEACpBE,GAAgBF,WAAsBI,GAAQ,iIAGtDC,GAAS,6EAGTC,GAAS,gFAGNC,GAAY,iFAGXC,GAAa,oDAIvCC,KAAK,G,gTCxBT,IAAAC,EAAAC,EAAA,SAMOC,eAAeC,EAAcC,EAAMC,GAEvC,MAAMC,EAAS,IAAIC,gBAAgB,CAClCC,IAAK,qCACLC,EAAGJ,EACHK,WAAY,QACZC,YAAa,aACbC,YAAY,EACZR,KAAMA,EACNS,SAAUC,IAIZ,aADmBd,EAAAe,QAAMC,IAAI,4BAAeV,I,+BCV9C,MAAMW,EAAaC,SAASC,cAAc,gBACpCC,EAAUF,SAASC,cAAc,YACjCE,EAAUH,SAASC,cAAc,aAEjCL,EAAU,GAChB,IAAIQ,EAAW,EAEXC,EAAa,GACbC,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,cAElC,MAGMC,EAAW,IAAIC,sBAiCrB,SAAyBC,GACrBA,EAAQC,SAASC,IACTA,EAAMC,iBACNV,GAAY,EAEZnB,EAAcmB,EAAUC,GAAYU,MAAMC,IAE/C,MAAMC,EAAS/C,EAAmB8C,EAASE,KAAKC,MACjDjB,EAAQkB,mBAAmB,YAAaH,GACxCX,EAASe,UAEKL,EAASE,KAAKI,WAAapB,EAAQqB,SAASC,SACpDjB,EAAAkB,GAASC,OAAOC,KAAK,8DACrBlB,EAASmB,UAAUzB,G,IAG1B0B,OAAOC,GAAMvB,EAAAkB,GAASC,OAAOK,QAAQ,8E,MApD1B,CACdC,WAAY,UAKWjC,EAAdkC,iBAAiB,UAe5B,SAA4BC,GAMkB,GAL1CA,EAAIC,iBACoBjC,EAAhBkC,UAAU,GACG/B,EAAV6B,EAAIG,OAAOC,SAAS,GAAGC,MACrBnC,EAAH,EAEU,KAAhBC,GAAuC,MAAfA,EAE5B,OADAH,EAAQkC,UAAY,GACb7B,EAAAkB,GAASC,OAAOK,QAAQ,kCApBjC9C,EAAcmB,EAAUC,GAAYU,MAAMC,IAExC,GAAIA,EAASE,KAAKI,WAAa,EAAG,CAChCf,EAAAkB,GAASC,OAAOc,QAAQ,oBAAoBxB,EAASE,KAAKI,qBACzD,MAAML,EAAS/C,EAAmB8C,EAASE,KAAKC,MACjDjB,EAAQkB,mBAAmB,YAAaH,GACxCX,EAASe,UACPZ,EAASgC,QAAQtC,E,KAGpB0B,OAAOC,GAAMvB,EAAAkB,GAASC,OAAOK,QAAQ,6E","sources":["src/js/createMarkup.js","src/js/fetchAPI-infinitiScroll.js","src/js/infiniti-scroll.js"],"sourcesContent":["\nexport function createMarkupInList(arr) {\n    const defaults={\nURL: 'http://www.palmares.lemondeduchiffre.fr/images/joomlart/demo/default.jpg'\n    }\n    \n  return arr.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n    `<a class=\"gallery_link\" href=\"${largeImageURL || defaults.URL}\"><div class=\"photo-card\">\n      <img class='img-card'src=\"${webformatURL || defaults.URL}\" alt=\"${tags || 'No tags'}\" loading=\"lazy\" height= '200px'/>\n      <div class=\"info\">\n        <p class=\"info-item\">\n          <b>Likes: </b>${likes || '-'}\n        </p>\n        <p class=\"info-item\">\n          <b>Views: </b>${views || '-'}\n        </p>\n        <p class=\"info-item\">\n          <b>Comments: </b>${comments || '-'}\n        </p>\n        <p class=\"info-item\">\n          <b>Downloads: </b>${downloads || '-'}\n        </p>\n      </div>\n    </div></a>`\n  ).join('');\n}","import axios from \"axios\";\nimport { perPage } from './infiniti-scroll';\n\nconst BASE_URL = 'https://pixabay.com/api/';\n\n//ств запиту на api\nexport async function fetchCardsAll(page, valueInput) {\n\n   const params = new URLSearchParams({\n    key: '39154877-9df82b17a56e0efc5c16aca53',\n    q: valueInput,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    page: page,\n    per_page: perPage,\n      });\n \n  const resp = await axios.get(`${BASE_URL}?${params}`);\n  return resp\n  //  .then((resp) => resp)\n  //   .catch((_) => Notiflix.Notify.warning('Sorry, there are no images matching your search query. Please try again.'))\n};\n\n\n\n\n\n","import {createMarkupInList} from './createMarkup'\n// import axios from \"axios\";\nimport {fetchCardsAll} from './fetchAPI-infinitiScroll'\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport '../css/style.css'\n\nconst searchForm = document.querySelector('.search-form');\nconst gallery = document.querySelector('.gallery');\nconst guardEl = document.querySelector('.js-guard');\n\nconst perPage = 40;\nlet currPage = 1;\nexport {perPage}\nlet valueInput = '';\nlet lightbox = new SimpleLightbox('.gallery a');\n\nconst options = {\n  rootMargin: \"800px\",\n};\nconst observer = new IntersectionObserver(handlerLoadMore, options);\n\n// слухач подій на запит по слову\nsearchForm.addEventListener('submit', handlerClickOnForm);\n\nfunction fetchData() {\n  fetchCardsAll(currPage, valueInput).then((dataResp) => {\n\n    if (dataResp.data.totalHits >= 1) {\n      Notiflix.Notify.success(`Hooray! We found ${dataResp.data.totalHits} images.`);\n       const markup = createMarkupInList(dataResp.data.hits);\n      gallery.insertAdjacentHTML('beforeend', markup);\n      lightbox.refresh();\n        observer.observe(guardEl);\n    }\n  })\n    .catch((_) => Notiflix.Notify.warning('Sorry, there are no images matching your search query. Please try again.'))\n}\nfunction handlerClickOnForm(evt) {\n    evt.preventDefault();//відміна перезагру сторінки\n    gallery.innerHTML=''; // зачистка при новому пошуку\n  valueInput = evt.target.elements[0].value; // те що ввів клієнт\n   currPage = 1; // При новому пошуку повертаємося на першу сторінку\n   \n    if ((valueInput === '') || (valueInput === ' ')) {\n    gallery.innerHTML = '';\n    return Notiflix.Notify.warning(`Sorry, you must enter a value.`);\n  }\n    fetchData()    //  запит на API\n}\n\n\n\nfunction handlerLoadMore(entries) {\n    entries.forEach((entry) => { \n        if (entry.isIntersecting) {\n            currPage += 1;\n          \n            fetchCardsAll(currPage, valueInput).then((dataResp) => {\n\n       const markup = createMarkupInList(dataResp.data.hits);\n      gallery.insertAdjacentHTML('beforeend', markup);\n      lightbox.refresh();\n\n                if (dataResp.data.totalHits <= gallery.children.length) {\n            Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\")\n            observer.unobserve(guardEl);\n                };\n  })\n    .catch((_) => Notiflix.Notify.warning('Sorry, there are no images matching your search query. Please try again.'))\n\n        }\n    })\n}"],"names":["$bb2db7a89a40ba72$export$1322211cc48fbc3b","arr","defaults","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","$2shzp","parcelRequire","async","$6d75814da4715e64$export$79675483ce1a9b5f","page","valueInput","params","URLSearchParams","key","q","image_type","orientation","safesearch","per_page","$6d1ba1ecd1bd8fe8$export$6cfc372de9b933a","default","get","$6d1ba1ecd1bd8fe8$var$searchForm","document","querySelector","$6d1ba1ecd1bd8fe8$var$gallery","$6d1ba1ecd1bd8fe8$var$guardEl","$6d1ba1ecd1bd8fe8$var$currPage","$6d1ba1ecd1bd8fe8$var$valueInput","$6d1ba1ecd1bd8fe8$var$lightbox","$parcel$interopDefault","$fZKcF","$6d1ba1ecd1bd8fe8$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","then","dataResp","markup","data","hits","insertAdjacentHTML","refresh","totalHits","children","length","$7Y9D8","Notify","info","unobserve","catch","_","warning","rootMargin","addEventListener","evt","preventDefault","innerHTML","target","elements","value","success","observe"],"version":3,"file":"infiniti-scroll.2c574d86.js.map"}